name: release

on:
  push:
    branches:
      - release

permissions:
  pull-requests: write
  contents: write

env:
  GH_TOKEN:     ${{ secrets.GITHUB_TOKEN }}
  WORK_DIR:     ../_WORK/
  RELEASE_DIR:  ./release/
  ZIP_FILE:   gal_kintetsu.zip

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: release
          fetch-depth: 0

      - name: Git setup
        run: |
          git config user.name  "actions-user"
          git config user.email "65916846+actions-user@users.noreply.github.com"
      
      - name: Create work directory
        run: |
          mkdir -p ${{ env.WORK_DIR }}

      - name: Registring env
        run: |
          echo "TAG=$(cat ./repo.json | jq -r .updates[0].tag)" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v1

      - name: Install dependencies
        run: |
          pip install -r ./code/release/requirements.txt
        
      - name: Run code
        run: | 
          python ./code/release/main.py
        
      - name: Copy repo.json
        run: |
          cp ./repo.json ${{ env.WORK_DIR }}${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}.json
          echo ${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}
    
      - name: Commit readme.md
        run: |
          git add -u
          git commit -m "${{ env.TAG }}のリリース準備"
          git pull origin release --rebase
          git push origin HEAD:release

      - name: Checkout dev branche
        uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 0
        
      - name: Merge into dev branche
        run: |
          git merge origin/release -m ${{ env.TAG }}の取り込み
          git pull origin dev
          git push origin dev

      - name: Checkout main branche
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
        
      - name: Merge into main branche
        run: |
          git merge origin/release -m ${{ env.TAG }}の取り込み
          git tag ${{ env.TAG }}
          git pull origin main
          git push origin main
          git push origin ${{ env.TAG }}
      
      - name: Make Release Directory
        run: mkdir -p ${{ env.RELEASE_DIR }}

      - name: Install packages
        run: |
          sudo apt update
          sudo apt install -y simutrans-makeobj
      
      - name: Run Makeobj
        run: |
          for type in */ ; do
            for name_path in "$type"*/ ; do
              name=$(basename "$name_path")
              if ls "$name_path"*.dat 1> /dev/null 2>&1; then 
                  makeobj pak128 ${{ env.RELEASE_DIR }}${type%/}.$name.pak $name_path*.dat
              fi
            done
          done
          
      - name: Release
        run: |
          zip -r -j ${{ env.ZIP_FILE }} ${{ env.RELEASE_DIR }}
          sed -i -e "a/\n詳しくは[Readme](readme.md)をご覧ください。\n" ${{ env.WORK_DIR }}${{ env.NOTE_FILE }}
          gh release create ${{ env.TAG }} ${{ env.ZIP_FILE }} -n $(cat ${{ env.WORK_DIR }}${{ env.WORK_DIR }}${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}.json | jq -r .updates[0].description)
